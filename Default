# Step 1: Run the custom command and wait for it to finish
try {
    Start-Process -FilePath "powershell.exe" -ArgumentList "Start-OSDCloud -Firmware -ZTI -OSName 'Windows 11 24H2 x64' -OSEdition Enterprise -OSLanguage en-us -OSActivation Volume" -Wait
} catch {
    Write-Error "Failed to run Start-OSDCloud command: $_"
    exit 1
}

# Step 2: Search for the "PatchedBootfiles" folder on all drives
$patchedBootFilesPath = Get-PSDrive -PSProvider FileSystem | ForEach-Object {
    Get-ChildItem -Path $_.Root -Recurse -Directory -ErrorAction SilentlyContinue | Where-Object { $_.Name -eq "PatchedBootfiles" }
} | Select-Object -First 1

if (-not $patchedBootFilesPath) {
    Write-Error "PatchedBootfiles folder not found on any drive."
    exit 1
}

# Step 3: Use mountvol to mount the system volume to S:
try {
    Start-Process -FilePath "cmd.exe" -ArgumentList "/c mountvol S: /S" -Wait
} catch {
    Write-Error "Failed to mount system volume: $_"
    exit 1
}

# Step 4: Copy all folders from \PatchedBootFiles\* to S:\ overwriting all files without asking for confirmation
try {
    Copy-Item -Path "$($patchedBootFilesPath.FullName)\*" -Destination "S:\" -Recurse -Force
} catch {
    Write-Error "Failed to copy files: $_"
    exit 1
}

# Step 5: Unmount the system volume
try {
    Start-Process -FilePath "cmd.exe" -ArgumentList "/c mountvol S: /d" -Wait
} catch {
    Write-Error "Failed to unmount system volume: $_"
    exit 1
}

# Step 6: Download the update package
$updateUrl = "https://catalog.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/770c53ae-5610-402f-b5e9-fe86142003cc/public/windows11.0-kb5058411-x64_fc93a482441b42bcdbb035f915d4be2047d63de5.msu"
$destinationPath = "C:\OSDCloud\CU\windows11.0-kb5058411-x64_fc93a482441b42bcdbb035f915d4be2047d63de5.msu"

if (-not (Test-Path -Path "C:\OSDCloud\CU")) {
    New-Item -ItemType Directory -Path "C:\OSDCloud\CU"
}

try {
    Invoke-WebRequest -Uri $updateUrl -OutFile $destinationPath
} catch {
    Write-Error "Failed to download update package: $_"
    exit 1
}

# Step 7: Use Add-WindowsPackage to add the update package, check for 'CUScratch' folder and create if not exists
$scratchDirectory = "C:\windows\temp\CUScratch"

if (-not (Test-Path -Path $scratchDirectory)) {
    New-Item -ItemType Directory -Path $scratchDirectory
}

try {
    Add-WindowsPackage -Path "C:\" -PackagePath $destinationPath -ScratchDirectory $scratchDirectory
} catch {
    Write-Error "Failed to add Windows package: $_"
    exit 1
}

# Step 8: Run the PowerShell equivalent of Dism.exe /image:"C:\" /Cleanup-Image /StartComponentCleanup /ResetBase, check for 'ResetBaseScratch' folder and create if not exists
$resetBaseScratchDirectory = "C:\windows\temp\ResetBaseScratch"

if (-not (Test-Path -Path $resetBaseScratchDirectory)) {
    New-Item -ItemType Directory -Path $resetBaseScratchDirectory
}

try {
    Start-Process -FilePath "cmd.exe" -ArgumentList "/c Dism.exe /image:C:\ /Cleanup-Image /StartComponentCleanup /ResetBase /ScratchDirectory:$resetBaseScratchDirectory" -Wait
} catch {
    Write-Error "Failed to run DISM command: $_"
    exit 1
}

# Step 9: Restart the computer
try {
    Restart-Computer -Force
} catch {
    Write-Error "Failed to restart the computer: $_"
    exit 1
}
